# Load necessary packages
library(datasets)
library(reshape2)
library(ggplot2)

# Load the ChickWeight dataset
data("ChickWeight")

# (i) Order the data frame by weight in ascending order and group by Diet
ordered_chickweight <- ChickWeight[order(ChickWeight$Diet, ChickWeight$weight), ]

# Extract the last 6 records from the ordered data frame
last_six_records <- tail(ordered_chickweight, 6)
print(last_six_records)

# (ii) Perform melting function based on Chick, Time, Diet as ID variables
melted_chickweight <- melt(ChickWeight, id.vars = c("Chick", "Time", "Diet"))
print(head(melted_chickweight))

# Perform casting function to display the mean value of weight grouped by Diet
mean_weight_by_diet <- dcast(melted_chickweight, Diet ~ variable, mean)
print(mean_weight_by_diet)

# Define a function to calculate the mode
get_mode <- function(v) {
  uniqv <- unique(v)
  uniqv[which.max(tabulate(match(v, uniqv)))]
}

# Perform casting function to display the mode of weight grouped by Diet
mode_weight_by_diet <- dcast(melted_chickweight, Diet ~ variable, fun.aggregate = get_mode)
print(mode_weight_by_diet)

# (5a) Create Box plot for weight grouped by Diet
ggplot(ChickWeight, aes(x = factor(Diet), y = weight)) +
  geom_boxplot() +
  labs(title = "Box Plot of Weight Grouped by Diet", x = "Diet", y = "Weight") +
  theme_minimal()

# (5b) Create a Histogram for weight features belonging to Diet-1 category
ggplot(subset(ChickWeight, Diet == 1), aes(x = weight)) +
  geom_histogram(binwidth = 10, fill = "blue", color = "black") +
  labs(title = "Histogram of Weight for Diet-1", x = "Weight", y = "Frequency") +
  theme_minimal()

# (5c) Create Scatter plot for weight vs Time grouped by Diet
ggplot(ChickWeight, aes(x = Time, y = weight, color = factor(Diet))) +
  geom_point() +
  labs(title = "Scatter Plot of Weight vs Time Grouped by Diet", x = "Time", y = "Weight") +
  theme_minimal()
